digraph "ICFG" {
	label="ICFG";

	Node0x557d0caf48b0 [shape=record,color=purple,label="{GlobalICFGNode0\nCopyStmt: [Var1 \<-- Var0]  \n ptr null \{ constant data \}\nAddrStmt: [Var32 \<-- Var3]  \n i32 0 \{ constant data \}\nAddrStmt: [Var19 \<-- Var3]  \n i32 1 \{ constant data \}\nAddrStmt: [Var4 \<-- Var5]  \nFunction: source \nAddrStmt: [Var9 \<-- Var10]  \nFunction: sink \nAddrStmt: [Var14 \<-- Var15]  \nFunction: main }"];
	Node0x557d0caf48b0 -> Node0x557d0cad53d0[style=solid];
	Node0x557d0cae4520 [shape=record,color=yellow,label="{FunEntryICFGNode1 \{fun: source\}}"];
	Node0x557d0cae4520 -> Node0x557d0cae7de0[style=solid];
	Node0x557d0cae7de0 [shape=record,color=red,label="{CallICFGNode2 \{fun: source\}\n   call void @sink() |{<s0>0x557d0cae7de0}}"];
	Node0x557d0cae7de0:s0 -> Node0x557d0cadab90[style=solid,color=red];
	Node0x557d0cae24c0 [shape=record,color=blue,label="{RetICFGNode3 \{fun: source\}\n   call void @sink() }"];
	Node0x557d0cae24c0 -> Node0x557d0cb5be60[style=solid];
	Node0x557d0cadab90 [shape=record,color=yellow,label="{FunEntryICFGNode4 \{fun: sink\}}"];
	Node0x557d0cadab90 -> Node0x557d0cb4d7c0[style=solid];
	Node0x557d0cb5bab0 [shape=record,color=green,label="{FunExitICFGNode5 \{fun: sink\}|{<s0>0x557d0cae7de0}}"];
	Node0x557d0cb5bab0:s0 -> Node0x557d0cae24c0[style=solid,color=blue];
	Node0x557d0cb5be60 [shape=record,color=black,label="{IntraICFGNode6 \{fun: source\}\n   ret void }"];
	Node0x557d0cb5be60 -> Node0x557d0cb23ea0[style=solid];
	Node0x557d0cb23ea0 [shape=record,color=green,label="{FunExitICFGNode7 \{fun: source\}|{<s0>0x557d0cb24d30}}"];
	Node0x557d0cb23ea0:s0 -> Node0x557d0cae80c0[style=solid,color=blue];
	Node0x557d0cb4d7c0 [shape=record,color=black,label="{IntraICFGNode8 \{fun: sink\}\n   ret void }"];
	Node0x557d0cb4d7c0 -> Node0x557d0cb5bab0[style=solid];
	Node0x557d0cad53d0 [shape=record,color=yellow,label="{FunEntryICFGNode9 \{fun: main\}}"];
	Node0x557d0cad53d0 -> Node0x557d0cb6d9e0[style=solid];
	Node0x557d0cb6d9e0 [shape=record,color=black,label="{IntraICFGNode10 \{fun: main\}\nAddrStmt: [Var17 \<-- Var18]  \n   %a = alloca i32, align 4 }"];
	Node0x557d0cb6d9e0 -> Node0x557d0cb6d6d0[style=solid];
	Node0x557d0cb6d6d0 [shape=record,color=black,label="{IntraICFGNode11 \{fun: main\}\nStoreStmt: [Var17 \<-- Var19]  \n   store i32 1, ptr %a, align 4 }"];
	Node0x557d0cb6d6d0 -> Node0x557d0cb5b2a0[style=solid];
	Node0x557d0cb5b2a0 [shape=record,color=black,label="{IntraICFGNode12 \{fun: main\}\nBranchStmt: [ Unconditional branch]\nSuccessor 0 ICFGNode13   \n   br label %while.cond }"];
	Node0x557d0cb5b2a0 -> Node0x557d0cb3d4a0[style=solid];
	Node0x557d0cb3d4a0 [shape=record,color=black,label="{IntraICFGNode13 \{fun: main\}\nLoadStmt: [Var23 \<-- Var17]  \n   %0 = load i32, ptr %a, align 4 }"];
	Node0x557d0cb3d4a0 -> Node0x557d0caff780[style=solid];
	Node0x557d0caff780 [shape=record,color=black,label="{IntraICFGNode14 \{fun: main\}\nCmpStmt: [Var24 \<-- (Var23 predicate41 Var19)]  \n   %cmp = icmp sle i32 %0, 1 }"];
	Node0x557d0caff780 -> Node0x557d0cafa290[style=solid];
	Node0x557d0cafa290 [shape=record,color=black,label="{IntraICFGNode15 \{fun: main\}\nBranchStmt: [Condition Var24]\nSuccessor 0 ICFGNode16   Successor 1 ICFGNode18   \n   br i1 %cmp, label %while.body, label %while.end }"];
	Node0x557d0cafa290 -> Node0x557d0cb24d30[style=solid];
	Node0x557d0cafa290 -> Node0x557d0cb44070[style=solid];
	Node0x557d0cb24d30 [shape=record,color=red,label="{CallICFGNode16 \{fun: main\}\nCallPE: [Var7 \<-- Var17]  \n   call void @source(ptr noundef %a) |{<s0>0x557d0cb24d30}}"];
	Node0x557d0cb24d30:s0 -> Node0x557d0cae4520[style=solid,color=red];
	Node0x557d0cae80c0 [shape=record,color=blue,label="{RetICFGNode17 \{fun: main\}\n   call void @source(ptr noundef %a) }"];
	Node0x557d0cae80c0 -> Node0x557d0cb69c80[style=solid];
	Node0x557d0cb44070 [shape=record,color=black,label="{IntraICFGNode18 \{fun: main\}\n   ret i32 0 }"];
	Node0x557d0cb44070 -> Node0x557d0cb013e0[style=solid];
	Node0x557d0cb69c80 [shape=record,color=black,label="{IntraICFGNode19 \{fun: main\}\nLoadStmt: [Var27 \<-- Var17]  \n   %1 = load i32, ptr %a, align 4 }"];
	Node0x557d0cb69c80 -> Node0x557d0cb24bb0[style=solid];
	Node0x557d0cb013e0 [shape=record,color=green,label="{FunExitICFGNode20 \{fun: main\}\nPhiStmt: [Var16 \<-- ([Var32, ICFGNode18],)]  \n   ret i32 0 }"];
	Node0x557d0cb24bb0 [shape=record,color=black,label="{IntraICFGNode21 \{fun: main\}\nBinaryOPStmt: [Var28 \<-- (Var27 opcode13 Var19)]  \n   %inc = add nsw i32 %1, 1 }"];
	Node0x557d0cb24bb0 -> Node0x557d0cb711f0[style=solid];
	Node0x557d0cb711f0 [shape=record,color=black,label="{IntraICFGNode22 \{fun: main\}\nStoreStmt: [Var17 \<-- Var28]  \n   store i32 %inc, ptr %a, align 4 }"];
	Node0x557d0cb711f0 -> Node0x557d0cb6d390[style=solid];
	Node0x557d0cb6d390 [shape=record,color=black,label="{IntraICFGNode23 \{fun: main\}\nBranchStmt: [ Unconditional branch]\nSuccessor 0 ICFGNode13   \n   br label %while.cond, !llvm.loop !6 }"];
	Node0x557d0cb6d390 -> Node0x557d0cb3d4a0[style=solid];
}
